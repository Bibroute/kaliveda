# How to build and install the KaliVeda toolkit

## 0. Prerequisites
### ROOT
At least version 5.32, works with version 6 from 6.02 onwards.
### CMake
At least version 2.8 of cmake is required.

## 1. Build & Install

In the following, S is the path (full or relative) to the source directory, B is the out-of-source build directory, and I is the full path to the directory where the toolkit will be installed after building.

Create the build directory and run cmake to configure the build. The simplest build (only basic libraries - see below for build options) looks like:

    $ mkdir B
    $ cd B
    $ cmake S -DCMAKE_INSTALL_PREFIX=I

Then to build and install the toolkit:

    $ make [-jN]
    $ make install
    
(if you have a N-processor machine, you can do 'make -jN' in order to speed up the build with a parallel make). In order to use the toolkit, it may be necessary to add I/bin to your PATH variable, and I/lib to your LD_LIBRARY_PATH variable, if executables and libraries in these two locations are not already automatically found on your system.

### 1.1 Build options

By default, only the base classes of the toolkit are built. For experiment-specific libraries, give the following options to cmake:

* INDRA: to build the libraries needed for analysis of INDRA data, do

    $ cmake S -DCMAKE_INSTALL_PREFIX=I -DUSE_INDRA=yes
      
* INDRA-VAMOS: to build the libraries needed for analysis of INDRA-VAMOS data, do

    $ cmake S -DCMAKE_INSTALL_PREFIX=I -DUSE_INDRAVAMOS=yes

* FAZIA: to build the libraries needed for analysis of FAZIA data, do

    $ cmake S -DCMAKE_INSTALL_PREFIX=I -DUSE_FAZIA=yes

Note that the last two options automatically enable building of the INDRA libraries which are needed by them. To enable building of all optional libraries, you can do:

    $ cmake S -DCMAKE_INSTALL_PREFIX=I -DUSE_ALL=yes

### 1.2 Optional extras

####Use interface to Ricardo Yanez's 'Range' dE/dx and range library

The default KVedaLoss range and energy loss classes are limited to a restricted
list of "known" materials. If you want to calculate energy losses etc. for
materials which are not included in KVedaLoss, you need to install Ricardo Yanez's
'Range' library, which is available here: http://www.calel.org/range.html
   
To build the KaliVeda interface classes to 'Range', add the following option to the cmake command line:
   
    -DUSE_RANGE=yes
      
If the library is not found, you can give the the path to the installation (should contain both lib/ and include/ directories):

    -DUSE_RANGE=yes -DRANGE_DIR=[path to range lib & headers]
