% KaliVeda User's Guide

# Simulating detector response (Filtering) #

We can "filter" simulated data either in order to establish the geometrical (or other)
efficiency of a given experimental set-up, or to make a comparison between
theoretical predictions and measured data which includes the biases and distortions
introduced by the experimental apparatus. 

In the KaliVeda framework, a complete
description of some experimental set-up is given by an instance of the
[`KVMultiDetArray`{.cpp}][KVMultiDetArray] class; theoretical or simulated data are
stored in collections of [`KVSimEvent`{.cpp}][KVSimEvent] objects; and experimental
data reconstructed from measured energy losses *etc.* are handled by
[`KVReconstructedEvent`{.cpp}][KVReconstructedEvent] objects.^[Note that both of the latter
classes inherit the common base class [`KVEvent`{.cpp}][KVEvent]]
The method which simulates the detection and reconstruction of simulated heavy-ion
collisions is

~~~~~~~{.cpp}
void KVMultiDetArray::DetectEvent(KVEvent* input, KVReconstructedEvent* output, const char* det_frame = "")
~~~~~~~

where 

* `KVEvent* input`{.cpp} is the simulated data event to be treated;
* `KVReconstructedEvent* output`{.cpp} is the reconstructed event which will be filled with the
   result of the detection and reconstruction; 
* `const char* det_frame`{.cpp} is an optional argument which can be used to indicate the name of
   the kinematical reference frame to be used for calculating particles' energy losses in
	detectors, in case their default reference frame does not coincide with the laboratory/detector
	frame (see [Kinematics]). 

## Options controlling filter behaviour ##
### Filter type ###

There are many possible replies to the question 'What does a filter do?'.
Three of them are implemented as types of filter which can be chosen by calling
method

~~~~~~~{.cpp}
void KVMultiDetArray::SetFilterType(Int_t)
~~~~~~~~

with one of these values:

`KVMultiDetArray::kFilterType_Geo`{.cpp}

:   Geometric filter only, all charged particles with non-zero kinetic energy in the
    detector reference frame are kept if their initial trajectory would hit at least
	 1 detector in the array. Each such particle is copied into the reconstructed
	 'detected' event with its simulated $Z$, $A$, and kinetic energy, but given a
	 direction drawn at random within the acceptance of the hit detector.

`KVMultiDetArray::kFilterType_GeoThresh`{.cpp}

:   Geometric filter with thresholds.particles are kept if they have enough energy to leave the target,
    and enough energy to cross at least one detector of the array.

`KVMultiDetArray::kFilterType_Full`{.cpp}

:   Full simulation of detection of particles by the array. the calibration parameters
    for the chosen run are inverted in order to calculate raw acquisition data.
	 
[KVMultiDetArray]: http://indra.in2p3.fr/KaliVedaDoc/KVMultiDetArray.html
[KVSimEvent]: http://indra.in2p3.fr/KaliVedaDoc/KVSimEvent.html
[KVReconstructedEvent]: http://indra.in2p3.fr/KaliVedaDoc/KVReconstructedEvent.html
[KVEvent]: http://indra.in2p3.fr/KaliVedaDoc/KVEvent.html
[Kinematics]: kinematics.html#defining-kinematical-reference-frames
