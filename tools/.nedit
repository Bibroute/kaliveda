! Preferences file for NEdit
! (User settings in X "application defaults" format)
!
! This file is overwritten by the "Save Defaults..." command in NEdit
! and serves only the interactively settable options presented in the NEdit
! "Preferences" menu.  To modify other options, such as key bindings, use
! the .Xdefaults file in your home directory (or the X resource
! specification method appropriate to your system).  The contents of this
! file can be moved into an X resource file, but since resources in this file
! override their corresponding X resources, either this file should be 
! deleted or individual resource lines in the file should be deleted for the
! moved lines to take effect.

nedit.fileVersion: 5.6
nedit.shellCommands: \
	spell:Alt+B:s:EX:\n\
		cat>spellTmp; xterm -e ispell -x spellTmp; cat spellTmp; rm spellTmp\n\
	wc::w:ED:\n\
		wc | awk '{print $1 " lines, " $2 " words, " $3 " characters"}'\n\
	sort::o:EX:\n\
		sort\n\
	number lines::n:AW:\n\
		nl -ba\n\
	make:Alt+Z:m:W:\n\
		make\n\
	expand::p:EX:\n\
		expand\n\
	unexpand::u:EX:\n\
		unexpand\n
nedit.macroCommands: \
	Complete Word:Alt+D::: {\n\
		# This macro attempts to complete the current word by\n\
		# finding another word in the same document that has\n\
		# the same prefix; repeated invocations of the macro\n\
		# (by repeated typing of its accelerator, say) cycles\n\
		# through the alternatives found.\n\
		# \n\
		# Make sure $compWord contains something (a dummy index)\n\
		$compWord[""] = ""\n\
		\n\
		# Test whether the rest of $compWord has been initialized:\n\
		# this avoids having to initialize the global variable\n\
		# $compWord in an external macro file\n\
		if (!("wordEnd" in $compWord)) {\n\
		    # we need to initialize it\n\
		    $compWord["wordEnd"] = 0\n\
		    $compWord["repeat"] = 0\n\
		    $compWord["init"] = 0\n\
		    $compWord["wordStart"] = 0\n\
		}\n\
		\n\
		if ($compWord["wordEnd"] == $cursor) {\n\
		        $compWord["repeat"] += 1\n\
		}\n\
		else {\n\
		   $compWord["repeat"] = 1\n\
		   $compWord["init"] = $cursor\n\
		\n\
		   # search back to a word boundary to find the word to complete\n\
		   # (we use \\w here to allow for programming "words" that can include\n\
		   # digits and underscores; use \\l for letters only)\n\
		   $compWord["wordStart"] = search("<\\\\w+", $cursor, "backward", "regex", "wrap")\n\
		\n\
		   if ($compWord["wordStart"] == -1)\n\
		      return\n\
		\n\
		    if ($search_end == $cursor)\n\
		       $compWord["word"] = get_range($compWord["wordStart"], $cursor)\n\
		    else\n\
		        return\n\
		}\n\
		s = $cursor\n\
		for (i=0; i <= $compWord["repeat"]; i++)\n\
		    s = search($compWord["word"], s - 1, "backward", "regex", "wrap")\n\
		\n\
		if (s == $compWord["wordStart"]) {\n\
		   beep()\n\
		   $compWord["repeat"] = 0\n\
		   s = $compWord["wordStart"]\n\
		   se = $compWord["init"]\n\
		}\n\
		else\n\
		   se = search(">", s, "regex")\n\
		\n\
		replace_range($compWord["wordStart"], $cursor, get_range(s, se))\n\
		\n\
		$compWord["wordEnd"] = $cursor\n\
	}\n\
	Fill Sel. w/Char:::R: {\n\
		# This macro replaces each character position in\n\
		# the selection with the string typed into the dialog\n\
		# it displays.\n\
		if ($selection_start == -1) {\n\
		    beep()\n\
		    return\n\
		}\n\
		\n\
		# Ask the user what character to fill with\n\
		fillChar = string_dialog("Fill selection with what character?", \\\n\
		                         "OK", "Cancel")\n\
		if ($string_dialog_button == 2 || $string_dialog_button == 0)\n\
		    return\n\
		\n\
		# Count the number of lines (NL characters) in the selection\n\
		# (by removing all non-NLs in selection and counting the remainder)\n\
		nLines = length(replace_in_string(get_selection(), \\\n\
		                                  "^.*$", "", "regex"))\n\
		\n\
		rectangular = $selection_left != -1\n\
		\n\
		# work out the pieces of required of the replacement text\n\
		# this will be top mid bot where top is empty or ends in NL,\n\
		# mid is 0 or more lines of repeats ending with NL, and\n\
		# bot is 0 or more repeats of the fillChar\n\
		\n\
		toplen = -1 # top piece by default empty (no NL)\n\
		midlen = 0\n\
		botlen = 0\n\
		\n\
		if (rectangular) {\n\
		    # just fill the rectangle:  mid\\n \\ nLines\n\
		    #                           mid\\n /\n\
		    #                           bot   - last line with no nl\n\
		    midlen = $selection_right -  $selection_left\n\
		    botlen = $selection_right -  $selection_left\n\
		} else {\n\
		    #                  |col[0]\n\
		    #         .........toptoptop\\n                      |col[0]\n\
		    # either  midmidmidmidmidmid\\n \\ nLines - 1   or ...botbot...\n\
		    #         midmidmidmidmidmid\\n /                          |col[1]\n\
		    #         botbot...         |\n\
		    #                 |col[1]   |wrap margin\n\
		    # we need column positions col[0], col[1] of selection start and\n\
		    # end (use a loop and arrays to do the two positions)\n\
		    sel[0] = $selection_start\n\
		    sel[1] = $selection_end\n\
		\n\
		    # col[0] = pos_to_column($selection_start)\n\
		    # col[1] = pos_to_column($selection_end)\n\
		\n\
		    for (i = 0; i < 2; ++i) {\n\
		        end = sel[i]\n\
		        pos = search("^", end, "regex", "backward")\n\
		        thisCol = 0\n\
		        while (pos < end) {\n\
		            nexttab = search("\\t", pos)\n\
		            if (nexttab < 0 || nexttab >= end) {\n\
		                thisCol += end - pos # count remaining non-tabs\n\
		                nexttab = end\n\
		            } else {\n\
		                thisCol += nexttab - pos + $tab_dist\n\
		                thisCol -= (thisCol % $tab_dist)\n\
		            }\n\
		            pos = nexttab + 1 # skip past the tab or end\n\
		        }\n\
		        col[i] = thisCol\n\
		    }\n\
		    toplen = max($wrap_margin - col[0], 0)\n\
		    botlen = min(col[1], $wrap_margin)\n\
		\n\
		    if (nLines == 0) {\n\
		        toplen = -1\n\
		        botlen = max(botlen - col[0], 0)\n\
		    } else {\n\
		        midlen = $wrap_margin\n\
		        if (toplen < 0)\n\
		            toplen = 0\n\
		        nLines-- # top piece will end in a NL\n\
		    }\n\
		}\n\
		\n\
		# Create the fill text\n\
		# which is the longest piece? make a line of that length\n\
		# (use string doubling - this allows the piece to be\n\
		# appended to double in size at each iteration)\n\
		\n\
		len = max(toplen, midlen, botlen)\n\
		charlen = length(fillChar) # maybe more than one char given!\n\
		\n\
		line = ""\n\
		while (len > 0) {\n\
		    if (len % 2)\n\
		        line = line fillChar\n\
		    len /= 2\n\
		    if (len > 0)\n\
		        fillChar = fillChar fillChar\n\
		}\n\
		# assemble our pieces\n\
		toppiece = ""\n\
		midpiece = ""\n\
		botpiece = ""\n\
		if (toplen >= 0)\n\
		    toppiece = substring(line, 0, toplen * charlen) "\\n"\n\
		if (botlen > 0)\n\
		    botpiece = substring(line, 0, botlen * charlen)\n\
		\n\
		# assemble midpiece (use doubling again)\n\
		line = substring(line, 0, midlen * charlen) "\\n"\n\
		while (nLines > 0) {\n\
		    if (nLines % 2)\n\
		        midpiece = midpiece line\n\
		    nLines /= 2\n\
		    if (nLines > 0)\n\
		        line = line line\n\
		}\n\
		# Replace the selection with the complete fill text\n\
		replace_selection(toppiece midpiece botpiece)\n\
	}\n\
	Quote Mail Reply:::: {\n\
		if ($selection_start == -1)\n\
		    replace_all("^.*$", "\\\\> &", "regex")\n\
		else\n\
		    replace_in_selection("^.*$", "\\\\> &", "regex")\n\
	}\n\
	Unquote Mail Reply:::: {\n\
		if ($selection_start == -1)\n\
		    replace_all("(^\\\\> )(.*)$", "\\\\2", "regex")\n\
		else\n\
		    replace_in_selection("(^\\\\> )(.*)$", "\\\\2", "regex")\n\
	}\n\
	C Comments>Comment Out Sel.@C@C++:::R: {\n\
		selStart = $selection_start\n\
		selEnd = $selection_end\n\
		replace_range(selStart, selEnd, "/* " get_selection() " */")\n\
		select(selStart, selEnd + 6)\n\
	}\n\
	C Comments>C Uncomment Sel.@C@C++:::R: {\n\
		sel = get_selection()\n\
		selStart = $selection_start\n\
		selEnd = $selection_end\n\
		commentStart = search_string(sel, "/*", 0)\n\
		if (substring(sel, commentStart+2, commentStart+3) == " ")\n\
		    keepStart = commentStart + 3\n\
		else\n\
		    keepStart = commentStart + 2\n\
		keepEnd = search_string(sel, "*/", length(sel), "backward")\n\
		commentEnd = keepEnd + 2\n\
		if (substring(sel, keepEnd - 1, keepEnd) == " ")\n\
		    keepEnd = keepEnd - 1\n\
		replace_range(selStart + commentStart, selStart + commentEnd, \\\n\
			substring(sel, keepStart, keepEnd))\n\
		select(selStart, selEnd - (keepStart-commentStart) - \\\n\
			(commentEnd - keepEnd))\n\
	}\n\
	C Comments>+ C++ Comment@C++:::R: {\n\
		replace_in_selection("^.*$", "// &", "regex")\n\
	}\n\
	C Comments>- C++ Comment@C++:::R: {\n\
		replace_in_selection("(^[ \\\\t]*// ?)(.*)$", "\\\\2", "regex")\n\
	}\n\
	C Comments>+ C Bar Comment 1@C:::R: {\n\
		if ($selection_left != -1) {\n\
		    dialog("Selection must not be rectangular")\n\
		    return\n\
		}\n\
		start = $selection_start\n\
		end = $selection_end-1\n\
		origText = get_range($selection_start, $selection_end-1)\n\
		newText = "/*\\n" replace_in_string(get_range(start, end), \\\n\
			"^", " * ", "regex") "\\n */\\n"\n\
		replace_selection(newText)\n\
		select(start, start + length(newText))\n\
	}\n\
	C Comments>- C Bar Comment 1@C:::R: {\n\
		selStart = $selection_start\n\
		selEnd = $selection_end\n\
		newText = get_range(selStart+3, selEnd-4)\n\
		newText = replace_in_string(newText, "^ \\\\* ", "", "regex")\n\
		replace_range(selStart, selEnd, newText)\n\
		select(selStart, selStart + length(newText))\n\
	}\n\
	Make C Prototypes@C@C++:::: {\n\
		# simplistic extraction of C function prototypes, usually good enough\n\
		if ($selection_start == -1) {\n\
		    start = 0\n\
		    end = $text_length\n\
		} else {\n\
		    start = $selection_start\n\
		    end = $selection_end\n\
		}\n\
		string = get_range(start, end)\n\
		# remove all C++ and C comments, then all blank lines in the extracted range\n\
		string = replace_in_string(string, "//.*$", "", "regex", "copy")\n\
		string = replace_in_string(string, "(?n/\\\\*.*?\\\\*/)", "", "regex", "copy")\n\
		string = replace_in_string(string, "^\\\\s*\\n", "", "regex", "copy")\n\
		nDefs = 0\n\
		searchPos = 0\n\
		prototypes = ""\n\
		staticPrototypes = ""\n\
		for (;;) {\n\
		    headerStart = search_string(string, \\\n\
			    "^[a-zA-Z]([^;#\\"'{}=><!/]|\\n)*\\\\)[ \\t]*\\n?[ \\t]*\\\\{", \\\n\
			    searchPos, "regex")\n\
		    if (headerStart == -1)\n\
			break\n\
		    headerEnd = search_string(string, ")", $search_end,"backward") + 1\n\
		    prototype = substring(string, headerStart, headerEnd) ";\\n"\n\
		    if (substring(string, headerStart, headerStart+6) == "static")\n\
			staticPrototypes = staticPrototypes prototype\n\
		    else\n\
		    			prototypes = prototypes prototype\n\
		    searchPos = headerEnd\n\
		    nDefs++\n\
		}\n\
		if (nDefs == 0) {\n\
		    dialog("No function declarations found")\n\
		    return\n\
		}\n\
		new()\n\
		focus_window("last")\n\
		replace_range(0, 0, prototypes staticPrototypes)\n\
	}\n
nedit.bgMenuCommands: \
	Undo:::: {\n\
		undo()\n\
	}\n\
	Redo:::: {\n\
		redo()\n\
	}\n\
	Cut:::R: {\n\
		cut_clipboard()\n\
	}\n\
	Copy:::R: {\n\
		copy_clipboard()\n\
	}\n\
	Paste:::: {\n\
		paste_clipboard()\n\
	}\n
nedit.highlightPatterns: Ada:Default\n\
	Awk:Default\n\
	C++:1:0{\n\
		comment:"/\\*":"\\*/"::Comment::\n\
		cplus comment:"//":"$"::Comment::\n\
		string:"""":"""":"\\n":Storage Type::\n\
		preprocessor line:"^[ \\t]*#":"$"::Preprocessor::\n\
		string escape chars:"\\\\(.|\\n)":::String1:string:\n\
		preprocessor esc chars:"\\\\(.|\\n)":::Preprocessor1:preprocessor line:\n\
		preprocessor comment:"/\\*":"\\*/"::Comment:preprocessor line:\n\
		preproc cplus comment:"//":"$"::Comment:preprocessor line:\n\
		character constant:"'":"'":"[^\\\\][^']":Character Const::\n\
		numeric constant:"<((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f)?|(k[A-Za-z0-9]*)>":::Numeric Const::D\n\
		storage keyword:"<(class|typename|typeid|template|friend|virtual|inline|explicit|operator|public|private|protected|const|extern|auto|register|static|mutable|unsigned|signed|volatile|char|double|float|int|long|short|bool|wchar_t|void|typedef|struct|union|enum|asm|export)>":::Storage Type::D\n\
		keyword:"<(new|delete|this|return|goto|if|else|case|default|switch|break|continue|while|do|for|try|catch|throw|sizeof|true|false|namespace|using|dynamic_cast|static_cast|reinterpret_cast|const_cast)>":::Keyword::D\n\
		braces:"[{}]":::Keyword::D\n\
		root storage:"<(Double_t|Int_t|Char_t|Option_t|Bool_t|Short_t|Long_t|Color_t|Float_t|UShort_t|ULong_t|UInt_t|UChar_t|Long64_t|ULong64_t|Byte_t)>":::Storage Type1::\n\
		ROOT class:"<(T[A-Za-z0-9]*)>":::Class::\n\
		KaliVeda class:"<(KV[A-Za-z0-9_]*)>":::Class2::\n\
		FAZIA class:"<(FZ[A-Za-z0-9_]*)>":::FAZIA Class::\n\
	}\n\
	C:Default\n\
	Fortran:1:0{\n\
		comment:"<(!|C|c|\\*)>":"$"::Comment::\n\
		subroutine:"<((s|S)ubroutine|(p|P)rogram)>":::Subroutine::\n\
		function:"(<(f|F)unction>)":::Subroutine1::\n\
		common block:"/[a-zA-Z_ ]*/":::Identifier::\n\
		string constant:"'":"'":"$":String1::\n\
		numeric constant:"<((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f)?>":::Numeric Const::D\n\
		storage keyword:"<((i|I)nteger(\\*[0-9]*)?|INTEGER(\\*[0-9]*)?|(c|C)haracter(\\*[0-9]*)?|CHARACTER(\\*[0-9])?|(r|R)eal(\\*[0-9]*)?|REAL(\\*[0-9])?)|(l|L)ogical(\\*[0-9]*)?|LOGICAL(\\*[0-9])?>":::Storage Type::\n\
		keyword:"<((i|I)nclude|(e|E)xternal|(c|C)ommon|(d|D)ata|(r|R)ecord|(i|I)(f|F)|(t|T)hen|(e|E)ndif|(d|D)(o|O)|(e|E)nddo|(p|P)rint\\*|(p|P)rint \\*|(p|P)rint|(c|C)all|(r|R)eturn|(w|W)rite|(e|E)lseif|(e|E)lse|(e|E)nd|(g|G)oto|(g|G)o (t|T)o|(c|C)ontinue|(o|O)pen|(c|C)lose|(i|I)mplicit|(n|N)one)>":::Keyword::\n\
	}\n\
	SGML HTML:Default\n\
	Makefile:Default\n\
	CSS2:1:0{\n\
		info:"(?# pattern set for CSS1 and CSS2; for use with NEdit 5.1.1 and higher; Joor Loohuis, joor@nl.linux.org)":::Plain::D\n\
		comment:"/\\*":"\\*/"::Comment::\n\
		import rule:"@import\\s+(url\\([^)]+\\))\\s*":";"::Warning::\n\
		import delim:"&":"&"::Preprocessor:import rule:C\n\
		import url:"\\1":::Subroutine1:import rule:C\n\
		import media:"(all|screen|print|projection|aural|braille|embossed|handheld|tty|tv|,)":::Preprocessor1:import rule:\n\
		media rule:"(@media)\\s+":"(?=\\{)"::Warning::\n\
		media delim:"&":"&"::Preprocessor:media rule:C\n\
		media type:"(all|screen|print|projection|aural|braille|embossed|handheld|tty|tv|,)":::Preprocessor1:media rule:\n\
		charset rule:"@charset\\s+(""[^""]+"")\\s*;":::Preprocessor::\n\
		charset name:"\\1":::String:charset rule:C\n\
		font-face rule:"@font-face":::Preprocessor::\n\
		page rule:"@page":"(?=\\{)"::Preprocessor1::\n\
		page delim:"&":"&"::Preprocessor:page rule:C\n\
		page pseudo class:":(first|left|right)":::Storage Type:page rule:\n\
		declaration:"\\{":"\\}"::Warning::\n\
		declaration delims:"&":"&"::Keyword:declaration:C\n\
		declaration comment:"/\\*":"\\*/"::Comment:declaration:\n\
		property:"<(azimuth|background(-(attachment|color|image|position|repeat))?|border(-(bottom(-(color|style|width))?|(-(color|style|width))?|collapse|color|left(-(color|style|width))?|right(-(color|style|width))?|spacing|style|top(-(color|style|width))?|width))?|bottom|caption-side|clear|clip|color|content|counter-(increment|reset)|cue(-(after|before))?|cursor|direction|display|elevation|empty-cells|float|font(-(family|size|size-adjust|stretch|style|variant|weight))?|height|left|letter-spacing|line-height|list-style(-(image|position|type))?|margin(-(bottom|left|right|top))?|marker-offset|marks|max-(height|width)|min-(height|width)|orphans|outline(-(color|style|width))?|overflow|padding(-(bottom|left|right|top))?|page(-break-(after|before|inside))?|pause(-(after|before))?|pitch(-range)?|play-during|position|quotes|richness|right|size|speak(-(header|numeral|punctuation))?|speech-rate|stress|table-layout|text(-(align|decoration|indent|shadow|transform))|top|unicode-bidi|vertical-align|visibility|voice-family|volume|white-space|widows|width|word-spacing|z-index)>":::Identifier1:declaration:\n\
		value:":":";":"\\}":Warning:declaration:\n\
		value delims:"&":"&"::Keyword:value:C\n\
		value modifier:"!important|inherit":::Keyword:value:\n\
		uri value:"<url\\([^)]+\\)":::Subroutine1:value:\n\
		clip value:"<rect\\(\\s*([+-]?\\d+(?:\\.\\d*)?)(in|cm|mm|pt|pc|em|ex|px)\\s*(,|\\s)\\s*([+-]?\\d+(?:\\.\\d*)?)(in|cm|mm|pt|pc|em|ex|px)\\s*(,|\\s)\\s*([+-]?\\d+(?:\\.\\d*)?)(in|cm|mm|pt|pc|em|ex|px)\\s*(,|\\s)\\s*([+-]?\\d+(?:\\.\\d*)?)(in|cm|mm|pt|pc|em|ex|px)\\s*\\)":::Subroutine:value:\n\
		function value:"<attr\\([^)]+\\)|<counter\\((\\l|\\\\([ -~\\0200-\\0377]|[\\l\\d]{1,6}\\s?))([-\\l\\d]|\\\\([ -~\\0200-\\0377]|[\\l\\d]{1,6}\\s?))*\\s*(,\\s*<(disc|circle|square|decimal|decimal-leading-zero|lower-roman|upper-roman|lower-greek|lower-alpha|lower-latin|upper-alpha|upper-latin|hebrew|armenian|georgian|cjk-ideographic|hiragana|katakana|hiragana-iroha|katakana-iroha|none)>)?\\)|<counters\\((\\l|\\\\([ -~\\0200-\\0377]|[\\l\\d]{1,6}\\s?))([-\\l\\d]|\\\\([ -~\\0200-\\0377]|[\\l\\d]{1,6}\\s?))*\\s*,\\s*(""[^""]*""|'[^']*')\\s*(,\\s*<(disc|circle|square|decimal|decimal-leading-zero|lower-roman|upper-roman|lower-greek|lower-alpha|lower-latin|upper-alpha|upper-latin|hebrew|armenian|georgian|cjk-ideographic|hiragana|katakana|hiragana-iroha|katakana-iroha|none)>)?\\)":::Subroutine:value:\n\
		color value:"(#[A-Fa-f\\d]{6}>|#[A-Fa-f\\d]{3}>|rgb\\(([+-]?\\d+(\\.\\d*)?)\\s*,\\s*([+-]?\\d+(\\.\\d*)?)\\s*,\\s*([+-]?\\d+(\\.\\d*)?)\\)|rgb\\(([+-]?\\d+(\\.\\d*)?%)\\s*,\\s*([+-]?\\d+(\\.\\d*)?%)\\s*,\\s*([+-]?\\d+(\\.\\d*)?%)\\)|<(?iaqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|purple|red|silver|teal|white|yellow)>|<transparent>)":::Text Arg2:value:\n\
		dimension value:"[+-]?(\\d*\\.\\d+|\\d+)(in|cm|mm|pt|pc|em|ex|px|deg|grad|rad|s|ms|hz|khz)>":::Numeric Const:value:\n\
		percentage value:"[+-]?(\\d*\\.\\d+|\\d+)%":::Numeric Const:value:\n\
		named value:"<(100|200|300|400|500|600|700|800|900|above|absolute|always|armenian|auto|avoid|baseline|behind|below|bidi-override|blink|block|bold|bolder|both|bottom|capitalize|caption|center(?:-left|-right)?|child|circle|cjk-ideographic|close-quote|code|collapse|compact|condensed|continuous|crop|cross(?:hair)?|cursive|dashed|decimal(?:-leading-zero)?|default|digits|disc|dotted|double|e-resize|embed|expanded|extra(?:-condensed|-expanded)|fantasy|far(?:-left|-right)|fast(?:er)?|female|fixed|georgian|groove|hebrew|help|hidden|hide|high(?:er)?|hiragana(?:-iroha)?|icon|inherit|inline(?:-table)?|inset|inside|italic|justify|katakana(?:-iroha)?|landscape|larger?|left(?:-side|wards)?|level|lighter|line-through|loud|low(?:er(?:-alpha|-greek|-latin|-roman|case)?)?|ltr|male|marker|medium|menu|message-box|middle|mix|monospace|move|n-resize|narrower|ne-resize|no(?:-close-quote|-open-quote|-repeat)|none|normal|nowrap|nw-resize|oblique|once|open-quote|out(?:set|side)|overline|pointer|portrait|pre|relative|repeat(?:-x|-y)?|ridge|right(?:-side|wards)?|rtl|run-in|s-resize|sans-serif|scroll|se-resize|semi(?:-condensed|-expanded)|separate|serif|show|silent|slow(?:er)?|small(?:-caps|-caption|er)?|soft|solid|spell-out|square|static|status-bar|sub|super|sw-resize|table(?:-caption|-cell|-column(?:-group)?|-footer-group|-header-group|-row(?:-group)?)?|text(?:-bottom|-top)?|thick|thin|top|ultra(?:-condensed|-expanded)|underline|upper(?:-alpha|-latin|-roman|case)|visible|w-resize|wait|wider|x-(?:fast|high|large|loud|low|slow|small|soft)|xx-(large|small))>":::Text Arg2:value:\n\
		integer value:"<\\d+>":::Numeric Const:value:\n\
		font family:"(?iarial|courier|impact|helvetica|lucida|symbol|times|verdana)":::String:value:\n\
		dq string value:"""":"""":"\\n":String:value:\n\
		dq string escape:"\\\\([ -~\\0200-\\0377]|[\\l\\d]{1,6}\\s?)":::Text Escape:dq string value:\n\
		dq string continuation:"\\\\\\n":::Text Escape:dq string value:\n\
		sq string value:"'":"'":"\\n":String:value:\n\
		sq string escape:"\\\\([ -~\\0200-\\0377]|[\\l\\d]{1,6}\\s?)":::Text Escape:sq string value:\n\
		sq string continuation:"\\\\\\n":::Text Escape:sq string value:\n\
		operators:"[,/]":::Keyword:value:\n\
		selector id:"#[-\\w]+>":::Label::\n\
		selector class:"\\.[-\\w]+>":::Storage Type::\n\
		selector pseudo class:":(first-child|link|visited|hover|active|focus|lang(\\([-\\w]+\\))?)>":::Storage Type::\n\
		selector attribute:"\\[[^\\]]+\\]":::Ada Attributes::\n\
		selector operators:"[,>*+]":::Keyword::\n\
		selector pseudo element:":(first-letter|first-line|before|after)>":::Text Arg::\n\
		type selector:"<[\\l_][-\\w]*>":::Plain::\n\
		free text:".":::Warning::\n\
	}\n\
	JavaScript:Default\n\
	XML:1:0{\n\
		comment:"\\<!--":"--\\>"::Comment::\n\
		ignored section:"\\<!\\[\\s*IGNORE\\s*\\[":"\\]\\]\\>"::Text Comment::\n\
		declaration:"\\<\\?(?ixml)":"\\?\\>"::Warning::\n\
		declaration delims:"&":"&"::Keyword:declaration:C\n\
		declaration attributes:"((?iversion|encoding|standalone))=":::Keyword:declaration:\n\
		declaration attribute names:"\\1":::Preprocessor:declaration attributes:C\n\
		declaration sq string:"'":"'":"\\n\\n":String1:declaration:\n\
		declaration sq string entity:"&((amp|lt|gt|quot|apos)|#x[\\da-fA-F]*|[\\l_]\\w*);":::Text Escape:declaration sq string:\n\
		declaration dq string:"""":"""":"\\n\\n":String:declaration:\n\
		declaration dq string entity:"&((amp|lt|gt|quot|apos)|#x[\\da-fA-F]*|[\\l_]\\w*);":::Text Escape:declaration dq string:\n\
		doctype:"(\\<!(?idoctype))\\s+(\\<?(?!(?ixml))[\\l_][\\w:-]*\\>?)":"\\>":"\\[":Warning::\n\
		doctype delims:"\\1":"&"::Keyword:doctype:C\n\
		doctype root element:"\\2":::Identifier:doctype:C\n\
		doctype keyword:"(SYSTEM|PUBLIC)":::Keyword:doctype:\n\
		doctype sq string:"'":"'":"\\n\\n":String1:doctype:\n\
		doctype dq string:"""":"""":"\\n\\n":String:doctype:\n\
		processing instruction:"\\<\\?\\S+":"\\?\\>"::Preprocessor::\n\
		processing instruction attribute:"[\\l_][\\w:-]*=((""[^""]*"")|('[^']*'))":::Preprocessor:processing instruction:\n\
		processing instruction value:"\\1":::String:processing instruction attribute:C\n\
		cdata:"\\<!\\[(?icdata)\\[":"\\]\\]\\>"::Text Comment::\n\
		cdata delims:"&":"&"::Preprocessor:cdata:C\n\
		element declaration:"\\<!ELEMENT":"\\>"::Warning::\n\
		element declaration delims:"&":"&"::Keyword:element declaration:C\n\
		element declaration entity ref:"%(?!(?ixml))[\\l_][\\w:-]*;":::Identifier1:element declaration:\n\
		element declaration keyword:"<(ANY|#PCDATA|EMPTY)>":::Storage Type:element declaration:\n\
		element declaration name:"<(?!(?ixml))[\\l_][\\w:-]*":::Identifier:element declaration:\n\
		element declaration operator:"[(),?*+|]":::Keyword:element declaration:\n\
		entity declaration:"\\<!ENTITY":"\\>"::Warning::\n\
		entity declaration delims:"&":"&"::Keyword:entity declaration:C\n\
		entity declaration sq string:"'":"'":"\\n\\n":String1:entity declaration:\n\
		entity declaration sq string entity:"&((amp|lt|gt|quot|apos)|#x[\\da-fA-F]*|[\\l_]\\w*);":::Text Escape:entity declaration sq string:\n\
		entity declaration dq string:"""":"""":"\\n\\n":String:entity declaration:\n\
		entity declaration dq string entity:"&((amp|lt|gt|quot|apos)|#x[\\da-fA-F]*|[\\l_]\\w*);":::Text Escape:entity declaration dq string:\n\
		entity declaration keyword:"SYSTEM|NDATA":::Keyword:entity declaration:\n\
		entity declaration name:"<(?!(?ixml))[\\l_][\\w:-]*":::Identifier:entity declaration:\n\
		parameter entity declaration:"%\\s+((?!(?ixml))[\\l_][\\w:-]*)>":::Keyword:entity declaration:\n\
		parameter entity name:"\\1":::Identifier:parameter entity declaration:C\n\
		notation:"\\<!NOTATION":"\\>"::Warning::\n\
		notation delims:"&":"&"::Keyword:notation:C\n\
		notation sq string:"'":"'":"\\n\\n":String1:notation:\n\
		notation sq string entity:"&((amp|lt|gt|quot|apos)|#x[\\da-fA-F]*|[\\l_]\\w*);":::Text Escape:notation sq string:\n\
		notation dq string:"""":"""":"\\n\\n":String:notation:\n\
		notation dq string entity:"&((amp|lt|gt|quot|apos)|#x[\\da-fA-F]*|[\\l_]\\w*);":::Text Escape:notation dq string:\n\
		notation keyword:"SYSTEM":::Keyword:notation:\n\
		notation name:"<(?!(?ixml))[\\l_][\\w:-]*":::Identifier:notation:\n\
		attribute declaration:"\\<!ATTLIST":"\\>"::Warning::\n\
		attribute declaration delims:"&":"&"::Keyword:attribute declaration:C\n\
		attribute declaration sq string:"'":"'":"\\n\\n":String1:attribute declaration:\n\
		attribute declaration sq string entity:"&((amp|lt|gt|quot|apos)|#x[\\da-fA-F]*|[\\l_]\\w*);":::Text Escape:attribute declaration sq string:\n\
		attribute declaration dq string:"""":"""":"\\n\\n":String:attribute declaration:\n\
		attribute declaration dq string entity:"&((amp|lt|gt|quot|apos)|#x[\\da-fA-F]*|[\\l_]\\w*);":::Text Escape:attribute declaration dq string:\n\
		attribute declaration namespace:"(?ixmlns)(:[\\l_][\\w:]*)?":::Preprocessor:attribute declaration:\n\
		attribute declaration default modifier:"#(REQUIRED|IMPLIED|FIXED)>":::Keyword:attribute declaration:\n\
		attribute declaration data type:"<(CDATA|ENTIT(Y|IES)|ID(REFS?)?|NMTOKENS?|NOTATION)>":::Storage Type:attribute declaration:\n\
		attribute declaration name:"<(?!(?ixml))[\\l_][\\w:-]*":::Identifier:attribute declaration:\n\
		attribute declaration operator:"[(),?*+|]":::Keyword:attribute declaration:\n\
		element:"(\\</?)((?!(?ixml))[\\l_][\\w:-]*)":"/?\\>"::Warning::\n\
		element delims:"\\1":"&"::Keyword:element:C\n\
		element name:"\\2":::Identifier:element:C\n\
		element assign:"=":::Keyword:element:\n\
		element reserved attribute:"(?ixml:(lang|space|link|attribute))(?==)":::Text Key:element:\n\
		element namespace:"(?ixmlns:[\\l_]\\w*)(?==)":::Preprocessor:element:\n\
		element attribute:"[\\l_][\\w:-]*(?==)":::Text Key1:element:\n\
		element sq string:"'":"'":"\\n\\n":String1:element:\n\
		element sq string entity:"&((amp|lt|gt|quot|apos)|#x[\\da-fA-F]*|[\\l_]\\w*);":::Text Escape:element sq string:\n\
		element dq string:"""":"""":"\\n\\n":String:element:\n\
		element dq string entity:"&((amp|lt|gt|quot|apos)|#x[\\da-fA-F]*|[\\l_]\\w*);":::Text Escape:element dq string:\n\
		entity:"&((amp|lt|gt|quot|apos)|#x[\\da-fA-F]*|[\\l_]\\w*);":::Text Escape::\n\
		marked section:"\\<!\\[\\s*(?:INCLUDE|(%(?!(?ixml))[\\l_][\\w:-]*;))\\s*\\[|\\]\\]\\>":::Label::\n\
		marked section entity ref:"\\1":::Identifier:marked section:C\n\
		internal subset delims:"[\\[\\]>]":::Keyword::D\n\
		info:"(?# version 0.1; author/maintainer: Joor Loohuis, joor@loohuis-consulting.nl)":::Comment::D\n\
	}\n\
	CSS:Default\n\
	Regex:Default\n\
	Fortran90:1:30{\n\
		Comment:"!":"$"::Comment::\n\
		Continuation:"&":::Flag::\n\
		String:"'":"'":"\\n([^ \\t]| [^ \\t]|  [^ \\t]|   [^ \\t]|    [^ \\t]|     [ \\t0]| *\\t[^1-9])":String::\n\
		Keywords:"<(ACCEPT|[Aa]ccept|ASSIGN|[Aa]ssign|AUTOMATIC|[Aa]utomatic|BACKSPACE|[Bb]ackspace|BLOCK|[Bb]lock|CALL|[Cc]all|CLOSE|[Cc]lose|COMMON|[Cc]ommon|CONTINUE|[Cc]ontinue|DATA|[Dd]ata|DECODE|[Dd]ecode|DELETE|[Dd]elete|DIMENSION|[Dd]imension|DO|[Dd]o|ELSE|[Ee]lse|ELSEIF|[Ee]lseif|ENCODE|[Ee]ncode|END *FILE|[Ee]nd *[Ff]ile|ENDFILE|[Ee]ndfile|END|[Ee]nd|ENDIF|[Ee]ndif|ENTRY|[Ee]ntry|EQUIVALENCE|[Ee]quivalence|EXIT|[Ee]xit|EXTERNAL|[Ee]xternal|FORMAT|[Ff]ormat|FUNCTION|[Ff]unction|GOTO|[Gg]oto|IF|[Ii]f|IMPLICIT|[Ii]mplicit|INCLUDE|[Ii]nclude|INQUIRE|[Ii]nquire|INTRINSIC|[Ii]ntrinsic|LOGICAL|[Ll]ogical|MAP|[Mm]ap|NONE|[Nn]one|ON|[Oo]n|OPEN|[Oo]pen|PARAMETER|[Pp]arameter|PAUSE|[Pp]ause|POINTER|[Pp]ointer|PRINT|[Pp]rint|PROGRAM|[Pp]rogram|READ|[Rr]ead|RECORD|[Rr]ecord|RETURN|[Rr]eturn|REWIND|[Rr]ewind|SAVE|[Ss]ave|STATIC|[Ss]tatic|STOP|[Ss]top|STRUCTURE|[Ss]tructure|SUBROUTINE|[Ss]ubroutine|SYSTEM|[Ss]ystem|THEN|[Tt]hen|TO|[Tt]o|TYPE|[Tt]ype|UNION|[Uu]nion|UNLOCK|[Uu]nlock|VIRTUAL|[Vv]irtual|VOLATILE|[Vv]olatile|WHILE|[Ww]hile|WRITE|[Ww]rite)>":::Keyword::D\n\
		Data Types:"<(BYTE|[Bb]yte|CHARACTER|[Cc]haracter|COMPLEX|[Cc]omplex|DOUBLE *COMPLEX|[Dd]ouble *[Cc]omplex|DOUBLE *PRECISION|[Dd]ouble *[Pp]recision|DOUBLE|[Dd]ouble|INTEGER|[Ii]nteger|REAL|[Rr]eal)(\\*[0-9]+)?>":::Keyword::D\n\
		F90 Keywords:"<(ALLOCATABLE|[Aa]llocatable|ALLOCATE|[Aa]llocate|CASE|[Cc]ase|CASE|[Cc]ase|CONTAINS|[Cc]ontains|CYCLE|[Cc]ycle|DEALLOCATE|[Dd]eallocate|ELSEWHERE|[Ee]lsewhere|ENDWHERE|[Ee]ndwhere|INTENT|[Ii]ntent|INTERFACE|[Ii]nterface|MODULE|[Mm]odule|NAMELIST|[Nn]amelist|OPTIONAL|[Oo]ptional|PRIVATE|[Pp]rivate|PROCEDURE|[Pp]rocedure|PUBLIC|[Pp]ublic|REWRITE|[Rr]ewrite|SELECT|[Ss]elect|USE|[Uu]se|WHERE|[Ww]here)>":::Keyword::D\n\
		Numeric const:"<[0-9]+(\\.[0-9]*)?([DEde][-+]?[0-9]*)?|\\.[0-9]+([DEde][-+]?[0-9]*)?>":::Numeric Const::D\n\
	}\n\
	CMake:1:0{\n\
		comment:"#.*":::Comment::\n\
		string:"""":"""":"\\n":String2::\n\
		string escape chars:"\\\\(?:.|\\n)":::String1:string:\n\
		var reference:"(\\$\\{\\w+\\})|(@\\w+@)":::Identifier::\n\
		var reference in string:"(?:\\$\\{\\w+\\})|(?:@\\w+@)":::Identifier1:string:\n\
		punctuation:"[()]":::Keyword::\n\
		known functions:"(<(?:ADD_CUSTOM_COMMAND|ADD_CUSTOM_TARGET|ADD_DEFINITIONS|ADD_DEPENDENCIES|ADD_EXECUTABLE|ADD_LIBRARY|ADD_SUBDIRECTORY|ADD_TEST|AUX_SOURCE_DIRECTORY|BUILD_COMMAND|BUILD_NAME|CMAKE_MINIMUM_REQUIRED|CONFIGURE_FILE|CREATE_TEST_SOURCELIST|ELSE|ELSEIF|ENABLE_LANGUAGE|ENABLE_TESTING|ENDFOREACH|ENDIF|ENDMACRO|ENDWHILE|EXECUTE_PROCESS|EXEC_PROGRAM|EXPORT_LIBRARY_DEPENDENCIES|FILE|FIND_FILE|FIND_LIBRARY|FIND_PACKAGE|FIND_PATH|FIND_PROGRAM|FLTK_WRAP_UI|FOREACH|GET_CMAKE_PROPERTY|GET_DIRECTORY_PROPERTY|GET_FILENAME_COMPONENT|GET_SOURCE_FILE_PROPERTY|GET_TARGET_PROPERTY|GET_TEST_PROPERTY|IF|INCLUDE|INCLUDE_DIRECTORIES|INCLUDE_EXTERNAL_MSPROJECT|INCLUDE_REGULAR_EXPRESSION|INSTALL|INSTALL_FILES|INSTALL_PROGRAMS|INSTALL_TARGETS|LINK_DIRECTORIES|LINK_LIBRARIES|LIST|LOAD_CACHE|LOAD_COMMAND|MACRO|MAKE_DIRECTORY|MARK_AS_ADVANCED|MATH|MESSAGE|OPTION|OUTPUT_REQUIRED_FILES|QT_WRAP_CPP|QT_WRAP_UI|REMOVE|REMOVE_DEFINITIONS|SEPARATE_ARGUMENTS|SET|SET_DIRECTORY_PROPERTIES|SET_SOURCE_FILES_PROPERTIES|SET_TARGET_PROPERTIES|SET_TESTS_PROPERTIES|SITE_NAME|SOURCE_GROUP|STRING|SUBDIRS|SUBDIR_DEPENDS|TARGET_LINK_LIBRARIES|TRY_COMPILE|TRY_RUN|USE_MANGLED_MESA|UTILITY_SOURCE|VARIABLE_REQUIRES|VTK_MAKE_INSTANTIATOR|VTK_WRAP_JAVA|VTK_WRAP_PYTHON|VTK_WRAP_TCL|WHILE|WRITE_FILE|add_custom_command|add_custom_target|add_definitions|add_dependencies|add_executable|add_library|add_subdirectory|add_test|aux_source_directory|build_command|build_name|cmake_minimum_required|configure_file|create_test_sourcelist|else|elseif|enable_language|enable_testing|endforeach|endif|endmacro|endwhile|execute_process|exec_program|export_library_dependencies|file|find_file|find_library|find_package|find_path|find_program|fltk_wrap_ui|foreach|get_cmake_property|get_directory_property|get_filename_component|get_source_file_property|get_target_property|get_test_property|if|include|include_directories|include_external_msproject|include_regular_expression|install|install_files|install_programs|install_targets|link_directories|link_libraries|list|load_cache|load_command|macro|make_directory|mark_as_advanced|math|message|option|output_required_files|qt_wrap_cpp|qt_wrap_ui|remove|remove_definitions|separate_arguments|set|set_directory_properties|set_source_files_properties|set_target_properties|set_tests_properties|site_name|source_group|string|subdirs|subdir_depends|target_link_libraries|try_compile|try_run|use_mangled_mesa|utility_source|variable_requires|vtk_make_instantiator|vtk_wrap_java|vtk_wrap_python|vtk_wrap_tcl|while|write_file)>)\\s*\\(":::Keyword::\n\
		known function names:"\\1":""::Identifier2:known functions:C\n\
		keywords:"(?:<(?:ABSOLUTE|AFTER|ALL|AND|APPEND|ARCHIVE|ARCHIVE DESTINATION|ARGS|ASCII|BEFORE|CACHE|CLEAR|CMAKE_FLAGS|CODE|COMMAND|COMMANDS|COMMAND_NAME|COMMENT|COMPARE EQUAL|COMPARE GREATER|COMPARE LESS|COMPARE NOTEQUAL|COMPILE_DEFINITIONS|COMPONENT|COMPONENTS|CONFIGURATIONS|CONFIGURE|COPYONLY|CVS|DBAR|DEFINED|DEPENDS|DESTINATION|DIRECTORY|DIRECTORY_PERMISSIONS|DOC|EQUAL|ERROR_FILE|ERROR_QUIET|ERROR_STRIP_TRAILING_WHITESPACE|ERROR_VARIABLE|ESCAPE_QUOTES|EXCLUDE|EXCLUDE_FROM_ALL|EXISTS|EXPORT_MACRO|EXPR|EXT|EXTRA_INCLUDE|FATAL_ERROR|FILE|FILES|FILE_PERMISSIONS|FORCE|FUNCTION|GET|GLOB|GLOB_RECURSE|GREATER|GROUP_EXECUTE GROUP_READ|GROUP_SIZE|HEADER_LOCATION|INCLUDES|INCLUDE_INTERNALS|INPUT_FILE|INSERT|IS_DIRECTORY|IS_NEWER_THAN|LENGTH|LESS|LIBRARY|LIBRARY DESTINATION|MACOSX_BUNDLE|MAIN_DEPENDENCY|MAKECOMMAND|MAKE_DIRECTORY|MATCHES|MESSAGE|MODULE|NAME|NAMES|NAME_WE|NOT|NO_CMAKE_ENVIRONMENT_PATH|NO_CMAKE_PATH|NO_CMAKE_SYSTEM_PATH|NO_DEFAULT_PATH|NO_MODULE|NO_SYSTEM_ENVIRONMENT_PATH|OFF|ON|ONLY|OPTIONAL|OPTION_VAR|OR|OUTPUT|OUTPUT_FILE|OUTPUT_QUIET|OUTPUT_STRIP_TRAILING_WHITESPACE|OUTPUT_VARIABLE|PATH|PATHS|PATH_SUFFIXES|PATTERN|PERMISSIONS|PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ|POST_BUILD|PREORDER|PRE_BUILD|PRE_LINK|PROGRAM|PROGRAMS|PROGRAM_ARGS|PROPERTIES|QUIET|RANGE|READ|READ_WITH_PREFIX|REGEX|REGEX MATCH|REGEX MATCHALL|REGEX REPLACE|REGULAR_EXPRESSION|RELATIVE|RELATIVE_PATH|REMOVE|REMOVE_AT|REMOVE_ITEM|REMOVE_RECURSE|RENAME|REPLACE|REQUIRED|RESULT_VAR|RESULT_VARIABLE|RETURN_VALUE|REVERSE|RUNTIME|RUNTIME DESTINATION|RUNTIME_DIRECTORY|RUN_RESULT_VAR COMPILE_RESULT_VAR|SCRIPT|SEND_ERROR|SHARED|SORT|SOURCES|STATIC|STATUS|STREQUAL|STRGREATER|STRLESS|SUBSTRING|SYSTEM|TARGET|TARGETS|TEST_VARIABLE RESULT_VARIABLE|TIMEOUT|TOLOWER|TOUPPER|TO_CMAKE_PATH|TO_NATIVE_PATH|USE_SOURCE_PERMISSIONS|VARIABLE|VERBATIM|VERSION|WORKING_DIRECTORY|WRITE|absolute|after|all|and|append|archive|archive destination|args|ascii|before|cache|clear|cmake_flags|code|command|commands|command_name|comment|compare equal|compare greater|compare less|compare notequal|compile_definitions|component|components|configurations|configure|copyonly|cvs|dbar|defined|depends|destination|directory|directory_permissions|doc|equal|error_file|error_quiet|error_strip_trailing_whitespace|error_variable|escape_quotes|exclude|exclude_from_all|exists|export_macro|expr|ext|extra_include|fatal_error|file|files|file_permissions|force|function|get|glob|glob_recurse|greater|group_execute group_read|group_size|header_location|includes|include_internals|input_file|insert|is_directory|is_newer_than|length|less|library|library destination|macosx_bundle|main_dependency|makecommand|make_directory|matches|message|module|name|names|name_we|not|no_cmake_environment_path|no_cmake_path|no_cmake_system_path|no_default_path|no_module|no_system_environment_path|off|on|only|optional|option_var|or|output|output_file|output_quiet|output_strip_trailing_whitespace|output_variable|path|paths|path_suffixes|pattern|permissions|permissions owner_execute owner_write owner_read|post_build|preorder|pre_build|pre_link|program|programs|program_args|properties|quiet|range|read|read_with_prefix|regex|regex match|regex matchall|regex replace|regular_expression|relative|relative_path|remove|remove_at|remove_item|remove_recurse|rename|replace|required|result_var|result_variable|return_value|reverse|runtime|runtime destination|runtime_directory|run_result_var compile_result_var|script|send_error|shared|sort|sources|static|status|strequal|strgreater|strless|substring|system|target|targets|test_variable result_variable|timeout|tolower|toupper|to_cmake_path|to_native_path|use_source_permissions|variable|verbatim|version|working_directory|write|debug|optimized)>)|@ONLY":::Keyword::\n\
		properties:"<(?:ABSTRACT|ADDITIONAL_MAKE_CLEAN_FILES|BUILD_WITH_INSTALL_RPATH|CACHE_VARIABLES|CLEAN_DIRECT_OUTPUT|COMPILE_FLAGS|CONFIG|CXX|DEBUG_LOCATION|DEBUG_OUTPUT_NAME|DEBUG_POSTFIX|DEFINE_SYMBOL|DEFINITION|DEFINITIONS|EXCLUDE_FROM_DEFAULT_BUILD|EXECUTABLE|FAIL_REGULAR_EXPRESSION|GENERATED|HEADER_FILE_ONLY|IMPORT_PREFIX|IMPORT_SUFFIX|INSTALL_NAME_DIR|INSTALL_RPATH|INSTALL_RPATH_USE_LINK_PATH|LINKER_LANGUAGE|LINK_FLAGS|LINK_FLAGS_DEBUG|LINK_FLAGS_MINSIZEREL|LINK_FLAGS_RELEASE|LINK_FLAGS_RELWITHDEBINFO|LISTFILE_STACK|LOCATION|MACROS|MINSIZEREL_LOCATION|MINSIZEREL_OUTPUT_NAME|MINSIZEREL_POSTFIX|MODULE_LIBRARY|OBJECT_DEPENDS|OUTPUT_NAME|PARENT_DIRECTORY|PASS_REGULAR_EXPRESSION|POST_INSTALL_SCRIPT|PREFIX|PRE_INSTALL_SCRIPT|PROJECT_LABEL|RELEASE_LOCATION|RELEASE_OUTPUT_NAME|RELEASE_POSTFIX|RELWITHDEBINFO_LOCATION|RELWITHDEBINFO_OUTPUT_NAME|RELWITHDEBINFO_POSTFIX|SHARED_LIBRARY|SKIP_BUILD_RPATH|SOVERSION|STATIC_LIBRARY|SUFFIX|SYMBOLIC|UTILITY|VARIABLES|VS_KEYWORD|WILL_FAIL|WRAP_EXCLUDE|abstract|additional_make_clean_files|build_with_install_rpath|cache_variables|clean_direct_output|compile_flags|config|cxx|debug_location|debug_output_name|debug_postfix|define_symbol|definition|definitions|exclude_from_default_build|executable|fail_regular_expression|generated|header_file_only|import_prefix|import_suffix|install_name_dir|install_rpath|install_rpath_use_link_path|linker_language|link_flags|link_flags_debug|link_flags_minsizerel|link_flags_release|link_flags_relwithdebinfo|listfile_stack|location|macros|minsizerel_location|minsizerel_output_name|minsizerel_postfix|module_library|object_depends|output_name|parent_directory|pass_regular_expression|post_install_script|prefix|pre_install_script|project_label|release_location|release_output_name|release_postfix|relwithdebinfo_location|relwithdebinfo_output_name|relwithdebinfo_postfix|shared_library|skip_build_rpath|soversion|static_library|suffix|symbolic|utility|variables|vs_keyword|will_fail|wrap_exclude)>":::Label::\n\
		ProjectDecl:"PROJECT\\s*\\((\\w+)((?:\\s+(?iC|C\\+\\+|Java|None))*)\\s*\\)":::Storage Type::\n\
		projectdecl:"project\\s*\\((\\w+)((?:\\s+(?iC|C\\+\\+|Java|None))*)\\s*\\)":::Storage Type::\n\
		ProjectName:"\\1\\2":""::Character Const:ProjectDecl:C\n\
	}
nedit.languageModes: 	Ada:.ada .ad .ads .adb .a:::::::\n\
	Awk:.awk:::::::\n\
	C++:.cc .h .C .H .i .cxx .hxx .cpp::::::".,/\\`'!|@#%^&*()-=+{}[]"":;<>?~":\n\
	C:.c::::::".,/\\`'!|@#%^&*()-=+{}[]"":;<>?~":\n\
	CMake:CMakeLists.txt .cmake:::None:::".,/\\`'!|@#%^&*()-=+{}[]"":;<>?~":\n\
	CSS:css::Auto:None:::".,/\\`'!|@#%^&*()=+{}[]"":;<>?~":\n\
	Csh:.csh .cshrc .tcshrc .login .logout:"^[ \\t]*#[ \\t]*![ \\t]*/bin/t?csh"::::::\n\
	Fortran:.f .f77 .for .incl .F .FOR:::::::\n\
	Java:.java:::::::\n\
	JavaScript:.js:::::::\n\
	LaTeX:.tex .sty .cls .dtx .ins:::::::\n\
	Lex:.lex:::::::\n\
	Makefile:Makefile.* Makefile makefile .gmk Makefile.general .am .mk .m4 Makefile.in:::None:8:8::\n\
	Matlab:.m .oct .sci:::::::\n\
	NEdit Macro:.nm .neditmacro:::::::\n\
	Pascal:.pas .p .int:::::::\n\
	Perl:.pl .pm .p5 .PL:"^[ \\t]*#[ \\t]*!.*perl":Auto:None:::".,/\\\\`'!$@#%^&*()-=+{}[]"":;<>?~|":\n\
	PostScript:.ps .eps .epsf .epsi:"^%!":::::"/%(){}[]<>":\n\
	Python:.py:"^#!.*python":Auto:None:::"!""#$%&'()*+,-./:;<=>?@[\\\\]^`{|}~":\n\
	Regex:.reg .regex:"\\(\\?[:#=!iInN].+\\)":None:Continuous::::\n\
	SGML HTML:.sgml .sgm .html .htm:"\\<[Hh][Tt][Mm][Ll]\\>"::::::\n\
	SQL:.sql:::::::\n\
	Sh Ksh Bash:.sh .bash .ksh .profile .bashrc .bash_logout .bash_login .bash_profile:"^[ \\t]*#[ \\t]*![ \\t]*/.*bin/(sh|ksh|bash)"::::::\n\
	Tcl:.tcl .tk .itcl .itk::Smart:None::::\n\
	VHDL:.vhd .vhdl .vdl:::::::\n\
	Verilog:.v:::::::\n\
	XML:.xml .xsl .dtd:"\\<(?i\\?xml|!doctype)"::None:::"<>/=""'()+*?|":\n\
	X Resources:.Xresources .Xdefaults .nedit nedit.rc:"^[!#].*([Aa]pp|[Xx]).*[Dd]efaults"::::::\n\
	Yacc:.y::::::".,/\\`'!|@#%^&*()-=+{}[]"":;<>?~":\n\
	CSS2:css::Auto:None:::".,/\\`'!|@#%^&*()=+{}[]"":;<>?~":\n\
	Fortran90:.f90:::::::
nedit.styles: 	Plain:black:Plain\n\
	Comment:Slate grey:Bold Italic\n\
	Keyword:blue:Bold\n\
	Operator:dark blue:Bold\n\
	Bracket:dark blue:Bold\n\
	Storage Type:green3:Bold\n\
	Label:green3:Bold\n\
	Storage Type1:saddle brown:Bold\n\
	String:darkGreen:Plain\n\
	String1:SeaGreen:Plain\n\
	String2:darkGreen:Bold\n\
	Preprocessor:RoyalBlue4:Plain\n\
	Preprocessor1:blue:Plain\n\
	Character Const:darkGreen:Plain\n\
	Numeric Const:darkGreen:Plain\n\
	Identifier:brown:Plain\n\
	Identifier1:RoyalBlue4:Plain\n\
	Identifier2:SteelBlue:Plain\n\
	Subroutine:brown:Plain\n\
	Subroutine1:chocolate:Plain\n\
	Ada Attributes:plum:Bold\n\
	Class:orange:Bold\n\
	Flag:red:Bold\n\
	Text Comment:SteelBlue4:Italic\n\
	Text Key:VioletRed4:Bold\n\
	Text Key1:VioletRed4:Plain\n\
	Text Arg:RoyalBlue4:Bold\n\
	Text Arg1:SteelBlue4:Bold\n\
	Text Arg2:RoyalBlue4:Plain\n\
	Text Escape:gray30:Bold\n\
	LaTeX Math:darkGreen:Plain\n\
	Pointer:#660000:Bold\n\
	Regex:#009944:Bold\n\
	Class2:RoyalBlue2:Bold\n\
	Warning:brown2:Italic\n\
	FAZIA Class:Red:Bold
nedit.smartIndentInit: 	C:Default\n\
	C++:Default\n\
	Python:Default\n\
	Matlab:Default
nedit.smartIndentInitCommon: Default
nedit.autoWrap: None
nedit.wrapMargin: 0
nedit.autoIndent: Smart
nedit.autoSave: True
nedit.openInTab: True
nedit.saveOldVersion: False
nedit.showMatching: Range
nedit.matchSyntaxBased: True
nedit.highlightSyntax: True
nedit.backlightChars: False
nedit.searchDialogs: False
nedit.beepOnSearchWrap: False
nedit.retainSearchDialogs: False
nedit.searchWraps: True
nedit.stickyCaseSenseButton: True
nedit.repositionDialogs: True
nedit.autoScroll: False
nedit.appendLF: True
nedit.sortOpenPrevMenu: True
nedit.statisticsLine: True
nedit.iSearchLine: False
nedit.sortTabs: False
nedit.dragDropTabs: False
nedit.dragDropTabsCursor: False
nedit.dragDropTabsAnimation: False
nedit.tabBar: True
nedit.tabBarHideOne: True
nedit.toolTips: True
nedit.globalTabNavigate: False
nedit.lineNumbers: True
nedit.pathInWindowsMenu: True
nedit.warnFileMods: True
nedit.warnRealFileMods: True
nedit.warnExit: True
nedit.searchMethod: Literal
nedit.textRows: 30
nedit.textCols: 80
nedit.tabDistance: 3
nedit.emulateTabs: 0
nedit.insertTabs: True
nedit.textFont: -adobe-courier-bold-r-normal--14-140-75-75-m-90-iso8859-1
nedit.boldHighlightFont: -adobe-courier-bold-r-normal--14-140-75-75-m-90-iso8859-1
nedit.italicHighlightFont: -adobe-courier-bold-o-normal--14-140-75-75-m-90-iso8859-1
nedit.boldItalicHighlightFont: -adobe-courier-bold-o-normal--14-140-75-75-m-90-iso8859-1
nedit.textFgColor: black
nedit.textBgColor: rgb:e5/e5/e5
nedit.selectFgColor: black
nedit.selectBgColor: rgb:cc/cc/cc
nedit.hiliteFgColor: white
nedit.hiliteBgColor: red
nedit.lineNoFgColor: black
nedit.cursorFgColor: black
nedit.shell: /bin/csh
nedit.smartTags: True
nedit.prefFileRead: True
nedit.titleFormat: {%c} [%s] %f (%S) - %d
